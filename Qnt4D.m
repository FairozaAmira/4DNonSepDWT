function Y = Qnt4D( X, Sw, Qs )
% Quantization function for 4D

%% Initialization
% DEFAULT

St = 5; %Number of stages
Op = 1; %Optimum bit allocation
% Qs=Quantization 
[n1 n2 n3 n4]=size(X); q=Qs;

if(Qs==0); Y=X; return;end;% No quantization
if(Op==0); f2=1; f4=1; f8=1; f16=1; end;% No bit optimum allocation
if(Op==1); f2=2; f4=4; f8=8; f16=16; end;% Has bit optimum allocation

%% FORWARD QUANTIZATION

if(Sw==+1)
 for s=1:St 
     n1=n1/2; n2=n2/2; n3=n3/2; n4=n4/2; q=q/2;
     Y(n1+1:n1*2, n2+1:n2*2, n3+1:n3*2, n4+1:n4*2)=X(n1+1:n1*2, n2+1:n2*2, n3+1:n3*2, n4+1:n4*2)/q/f16;
     Y(n1+1:n1*2, n2+1:n2*2, n3+1:n3*2,      1:n4)=X(n1+1:n1*2, n2+1:n2*2, n3+1:n3*2,      1:n4)/q/f8;
     Y(n1+1:n1*2, n2+1:n2*2,      1:n3, n4+1:n4*2)=X(n1+1:n1*2, n2+1:n2*2,      1:n3, n4+1:n4*2)/q/f8;
     Y(n1+1:n1*2, n2+1:n2*2,      1:n3,      1:n4)=X(n1+1:n1*2, n2+1:n2*2,      1:n3,      1:n4)/q/f4;
     Y(n1+1:n1*2,      1:n2, n3+1:n3*2, n4+1:n4*2)=X(n1+1:n1*2,      1:n2, n3+1:n3*2, n4+1:n4*2)/q/f8;
     Y(n1+1:n1*2,      1:n2, n3+1:n3*2,      1:n4)=X(n1+1:n1*2,      1:n2, n3+1:n3*2,      1:n4)/q/f4;
     Y(n1+1:n1*2,      1:n2,      1:n3, n4+1:n4*2)=X(n1+1:n1*2,      1:n2,      1:n3, n4+1:n4*2)/q/f4;
     Y(n1+1:n1*2,      1:n2,      1:n3,      1:n4)=X(n1+1:n1*2,      1:n2,      1:n3,      1:n4)/q/f2;
     Y(     1:n1, n2+1:n2*2, n3+1:n3*2, n4+1:n4*2)=X(     1:n1, n2+1:n2*2, n3+1:n3*2, n4+1:n4*2)/q/f8;
     Y(     1:n1, n2+1:n2*2, n3+1:n3*2,      1:n4)=X(     1:n1, n2+1:n2*2, n3+1:n3*2,      1:n4)/q/f4;
     Y(     1:n1, n2+1:n2*2,      1:n3, n4+1:n4*2)=X(     1:n1, n2+1:n2*2,      1:n3, n4+1:n4*2)/q/f4;
     Y(     1:n1, n2+1:n2*2,      1:n3,      1:n4)=X(     1:n1, n2+1:n2*2,      1:n3,      1:n4)/q/f2;
     Y(     1:n1,      1:n2, n3+1:n3*2, n4+1:n4*2)=X(     1:n1,      1:n2, n3+1:n3*2, n4+1:n4*2)/q/f4;
     Y(     1:n1,      1:n2, n3+1:n3*2,      1:n4)=X(     1:n1,      1:n2, n3+1:n3*2,      1:n4)/q/f2;
     Y(     1:n1,      1:n2,      1:n3, n4+1:n4*2)=X(     1:n1,      1:n2,      1:n3, n4+1:n4*2)/q/f2;
 end;Y(   1:n1  ,     1:n2,       1:n3,      1:n4)=X(   1:n1  ,     1:n2,       1:n3,      1:n4)/q;
     Y=R(1,1,Y); 
end

%% BACKWARD QUANTIZATION

if(Sw==-1)
 for s=1:St 
    n1=n1/2; n2=n2/2; n3=n3/2; n4=n4/2; q=q/2;
     Y(n1+1:n1*2, n2+1:n2*2, n3+1:n3*2, n4+1:n4*2)=X(n1+1:n1*2, n2+1:n2*2, n3+1:n3*2, n4+1:n4*2)*q*f16;
     Y(n1+1:n1*2, n2+1:n2*2, n3+1:n3*2,      1:n4)=X(n1+1:n1*2, n2+1:n2*2, n3+1:n3*2,      1:n4)*q*f8;
     Y(n1+1:n1*2, n2+1:n2*2,      1:n3, n4+1:n4*2)=X(n1+1:n1*2, n2+1:n2*2,      1:n3, n4+1:n4*2)*q*f8;
     Y(n1+1:n1*2, n2+1:n2*2,      1:n3,      1:n4)=X(n1+1:n1*2, n2+1:n2*2,      1:n3,      1:n4)*q*f4;
     Y(n1+1:n1*2,      1:n2, n3+1:n3*2, n4+1:n4*2)=X(n1+1:n1*2,      1:n2, n3+1:n3*2, n4+1:n4*2)*q*f8;
     Y(n1+1:n1*2,      1:n2, n3+1:n3*2,      1:n4)=X(n1+1:n1*2,      1:n2, n3+1:n3*2,      1:n4)*q*f4;
     Y(n1+1:n1*2,      1:n2,      1:n3, n4+1:n4*2)=X(n1+1:n1*2,      1:n2,      1:n3, n4+1:n4*2)*q*f4;
     Y(n1+1:n1*2,      1:n2,      1:n3,      1:n4)=X(n1+1:n1*2,      1:n2,      1:n3,      1:n4)*q*f2;
     Y(     1:n1, n2+1:n2*2, n3+1:n3*2, n4+1:n4*2)=X(     1:n1, n2+1:n2*2, n3+1:n3*2, n4+1:n4*2)*q*f8;
     Y(     1:n1, n2+1:n2*2, n3+1:n3*2,      1:n4)=X(     1:n1, n2+1:n2*2, n3+1:n3*2,      1:n4)*q*f4;
     Y(     1:n1, n2+1:n2*2,      1:n3, n4+1:n4*2)=X(     1:n1, n2+1:n2*2,      1:n3, n4+1:n4*2)*q*f4;
     Y(     1:n1, n2+1:n2*2,      1:n3,      1:n4)=X(     1:n1, n2+1:n2*2,      1:n3,      1:n4)*q*f2;
     Y(     1:n1,      1:n2, n3+1:n3*2, n4+1:n4*2)=X(     1:n1,      1:n2, n3+1:n3*2, n4+1:n4*2)*q*f4;
     Y(     1:n1,      1:n2, n3+1:n3*2,      1:n4)=X(     1:n1,      1:n2, n3+1:n3*2,      1:n4)*q*f2;
     Y(     1:n1,      1:n2,      1:n3, n4+1:n4*2)=X(     1:n1,      1:n2,      1:n3, n4+1:n4*2)*q*f2;
 end;Y(   1:n1  ,     1:n2,       1:n3,      1:n4)=X(   1:n1  ,     1:n2,       1:n3,      1:n4)*q;
end


end

